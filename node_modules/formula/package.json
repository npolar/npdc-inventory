{
  "_args": [
    [
      "formula@github:npolar/formula#2.x",
      "/home/siri/projects/npdc-inventory/node_modules/npdc-common"
    ]
  ],
  "_from": "npolar/formula#2.x",
  "_id": "formula@1.1.0",
  "_inCache": true,
  "_location": "/formula",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/npolar/formula/2.x/package.json",
      "gitUrl": "git://github.com/npolar/formula.git#2.x",
      "httpsUrl": "git+https://github.com/npolar/formula.git#2.x",
      "shortcut": "github:npolar/formula#2.x",
      "ssh": "git@github.com:npolar/formula.git#2.x",
      "sshUrl": "git+ssh://git@github.com/npolar/formula.git#2.x",
      "type": "github"
    },
    "name": "formula",
    "raw": "formula@github:npolar/formula#2.x",
    "rawSpec": "github:npolar/formula#2.x",
    "scope": null,
    "spec": "github:npolar/formula#2.x",
    "type": "hosted"
  },
  "_requiredBy": [
    "/npdc-common"
  ],
  "_resolved": "git://github.com/npolar/formula.git#f89e6ce7a4dfd49500d9aee9154b4f939cd93545",
  "_shasum": "47755e3eb2273a26f61f0e0ebc1c3368d9217325",
  "_shrinkwrap": null,
  "_spec": "formula@github:npolar/formula#2.x",
  "_where": "/home/siri/projects/npdc-inventory/node_modules/npdc-common",
  "author": {
    "name": "@npolar"
  },
  "bugs": {
    "url": "https://github.com/npolar/formula/issues"
  },
  "dependencies": {
    "angular": "^1.4.7",
    "tv4": "^1.1.12"
  },
  "description": "formula =======",
  "devDependencies": {
    "angular-resource": "^1.5.0-beta.0",
    "gulp": "^3.9.0",
    "gulp-angular-templatecache": "^1.7.0",
    "gulp-concat": "^2.6.0",
    "gulp-concat-css": "^2.2.0",
    "gulp-csso": "^1.0.0",
    "gulp-define-module": "^0.1.3",
    "gulp-jshint": "^1.11.2",
    "gulp-minify-html": "^1.0.4",
    "gulp-uglify": "^1.2.0"
  },
  "gitHead": "f89e6ce7a4dfd49500d9aee9154b4f939cd93545",
  "homepage": "https://github.com/npolar/formula#readme",
  "installable": true,
  "license": "MIT",
  "main": "dist/formula.commonjs.js",
  "name": "formula",
  "optionalDependencies": {},
  "readme": "formula\n=======\n\nGeneric JSON Schema form builder using Angular\n\nFor useage examples, check out the [Formula demo](http://npolar.github.io/formula/demo/) webpage.\n\n\n## Dependencies\n* [AngularJS](https://angularjs.org/) (^1.4.7)\n* [tv4.js](https://github.com/geraintluff/tv4/)\n\n\n## Bootstrapping\nBootstrapping is done using the **formula** directive, which takes one *object* as a parameter, currently supporting the following properties:\n\n* **schema** - URL to a JSON Schema used for form-building and validation *(mandatory)*\n* **form** - URL to a JSON Schema used to customise the form layout\n* **language** - URL to a JSON translation file used for form translations\n* **model** - Object used to store form data\n* **template** - String representing the form template layout name used for form-building\n* **templates** - Object to configure custom field templates\n\n### Custom Templates\nCustom templates is configured like this:\n```\ntemplates: [{\n  match(field) {\n      return field.id === \"ref_object\";\n    },\n    templateUrl: 'customObject.html',\n    //template: '<p>{{field.title}}</p>'\n}]\n```\n\n## Templates\nThe following layout templates are bundled with Formula:\n\n* **default** used together with the [formula](dist/formula.css) ([minified](dist/formula.min.css)) stylesheet\n* **bootstrap3** used together with the [Bootstrap (v3)](http://getbootstrap.com/) stylesheet\n\n\n## Supported types\n* **any** rendered as:\n * **text input** which automatically recognises **boolean**, **number** and **array** types\n* **array** rendered as:\n * **fieldset array** if the *items type* property is set to *object*\n * **field array** if the *items type* property is set to a basic JSON Schema type\n * **multiple select** if the *items enum* property is set\n* **boolean** rendered as:\n * **checkbox input**\n* **integer** and **number** rendered as:\n * **range input** if *type* property is set to *range* (in a separate form definition)\n * **select** if the *enum* property is set\n * **number input** otherwise\n* **null** which is simply not rendered\n* **object** which is rendered as a fieldset\n* **string** rendered as:\n * **date input** if the *format* property is set to *date*\n * **datetime input** if the *format* property is set to *date-time*\n * **time input** if the *format* property is set to *time*\n * **textarea** if the *type* property is set to *textarea* (in a separate form definition)\n * **number input** if the *format* property is set to *utc-millisec*\n * **select** if the *enum* property is set\n * **autocomplete** if the *autocomplete* property in set for *string* fields (in a separate form definition)\n * **text input** otherwise\n\n\n## Supported string formats\n* **color** for CSS 2.1 colors\n* **date** for ISO 8601 date\n* **date-time** for ISO 8601 date-time combinations\n* **time** for ISO 8601 time\n* **uri** for RFC 3986 uniform resource identifier\n\n\n### Autocomplete\nAutocomplete is available for string fields and is configured in the form definition in any of these ways:\n\n    {\n      \"id\": \"autocomplete_array\",\n      \"autocomplete\": [\"Dalene\", \"Allan\"] <- static array\n    },\n    {\n      \"id\": \"autocomplete_url\",\n      \"autocomplete\": \"//api.npolar.no/\" <- GET returns array\n    },\n    {\n      \"id\": \"autocomplete_fn\",\n      \"autocomplete\": \"foobar\" <- function returns array\n    },\n    {\n      \"id\": \"autocomplete_obj\",\n      \"autocomplete\": {\n        \"source\": \"http://api.npolar.no/publication/?q=&fields=people.email&format=json&variant=array&limit=5\",\n        \"callback\": \"emailCallback\" <- callback returns array\n      }\n    }\n\nCallback functions are defined via ```formulaAutoCompleteService``` like so:\n\n    formulaAutoCompleteService.defineSourceFunction(\"emailCallback\", function (response) {\n      // return a array here\n    });\n\nIf the source is an url new results will be fetched with ```?q=value``` for each input change.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npolar/formula.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.1.0"
}
